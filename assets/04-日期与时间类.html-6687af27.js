const e=JSON.parse('{"key":"v-22146494","path":"/study/java/javaSE/04-%E6%97%A5%E6%9C%9F%E4%B8%8E%E6%97%B6%E9%97%B4%E7%B1%BB.html","title":"日期与时间","lang":"zh-CN","frontmatter":{"category":"基础","tag":["Date","java"],"description":"日期与时间 Calendar对象获取日历 Calendar是Java中常用的时间处理工具之一,它提供了很多日历类型常见方法. 1.创建Calendar对象 \\t\\t//Calendar是一个抽象类，不能直接创建对象，可以通过getInstance()方法获取实例 Calendar calendar = Calendar.getInstance(); //默认是当前日期","head":[["meta",{"property":"og:url","content":"https://zhaoxin1998.github.io/debugKing-github.io/debugKing-github.io/study/java/javaSE/04-%E6%97%A5%E6%9C%9F%E4%B8%8E%E6%97%B6%E9%97%B4%E7%B1%BB.html"}],["meta",{"property":"og:site_name","content":"DebugKing"}],["meta",{"property":"og:title","content":"日期与时间"}],["meta",{"property":"og:description","content":"日期与时间 Calendar对象获取日历 Calendar是Java中常用的时间处理工具之一,它提供了很多日历类型常见方法. 1.创建Calendar对象 \\t\\t//Calendar是一个抽象类，不能直接创建对象，可以通过getInstance()方法获取实例 Calendar calendar = Calendar.getInstance(); //默认是当前日期"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-08T10:44:09.000Z"}],["meta",{"property":"article:author","content":"DebugKing"}],["meta",{"property":"article:tag","content":"Date"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:modified_time","content":"2024-01-08T10:44:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"日期与时间\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-08T10:44:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"DebugKing\\",\\"url\\":\\"https://github.com/zhaoxin1998\\",\\"email\\":\\"1778524294@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"Calendar对象获取日历","slug":"calendar对象获取日历","link":"#calendar对象获取日历","children":[]},{"level":2,"title":"Date对象","slug":"date对象","link":"#date对象","children":[{"level":3,"title":"1.常用方法","slug":"_1-常用方法","link":"#_1-常用方法","children":[]},{"level":3,"title":"2.SimpleDateFormat 格式化","slug":"_2-simpledateformat-格式化","link":"#_2-simpledateformat-格式化","children":[]}]},{"level":2,"title":"jdk8新增 java.time包","slug":"jdk8新增-java-time包","link":"#jdk8新增-java-time包","children":[{"level":3,"title":"1.Clock 时钟","slug":"_1-clock-时钟","link":"#_1-clock-时钟","children":[]},{"level":3,"title":"2.Instant 时刻(时间戳)","slug":"_2-instant-时刻-时间戳","link":"#_2-instant-时刻-时间戳","children":[]},{"level":3,"title":"3.LocalXXX 本地时间","slug":"_3-localxxx-本地时间","link":"#_3-localxxx-本地时间","children":[]},{"level":3,"title":"4.DateTimeFormatter格式化","slug":"_4-datetimeformatter格式化","link":"#_4-datetimeformatter格式化","children":[]}]}],"git":{"createdTime":1704710649000,"updatedTime":1704710649000,"contributors":[{"name":"赵新","email":"1778524294@qq.com","commits":1}]},"filePathRelative":"study/java/javaSE/04-日期与时间类.md","localizedDate":"2024年1月8日","excerpt":"<h1> 日期与时间</h1>\\n<h2> Calendar对象获取日历</h2>\\n<ul>\\n<li>Calendar是Java中常用的时间处理工具之一,它提供了很多日历类型常见方法.</li>\\n</ul>\\n<h4> 1.创建Calendar对象</h4>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code> \\t\\t<span class=\\"token comment\\">//Calendar是一个抽象类，不能直接创建对象，可以通过getInstance()方法获取实例</span>\\n        <span class=\\"token class-name\\">Calendar</span> calendar <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">Calendar</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getInstance</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">//默认是当前日期</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true,"copyright":{"author":"Mr.debugKing","license":"MIT"},"readingTime":{"minutes":4.24,"words":1272}}');export{e as data};
