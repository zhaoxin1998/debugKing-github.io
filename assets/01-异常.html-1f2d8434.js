const t=JSON.parse('{"key":"v-5fff315a","path":"/study/java/javaSE/01-%E5%BC%82%E5%B8%B8.html","title":"异常","lang":"zh-CN","frontmatter":{"category":"基础","tag":["abnormal","java"],"description":"异常 异常用于解决一下程序无法掌握但又必须面对的情况. 异常处理原则 尽量不要捕获类似 Exception 这样的通用异常，而是应该捕获特定异常 不要生吞（swallow）异常,捕获异常后不要不做任何操作或直接e.printStackTrace();输出堆栈轨迹信息 try-catch 代码段会产生额外的性能开销，它往往会影响 JVM 对代码进行优化，所以建议仅捕获有必要的代码段，尽量不要一个大的 try 包住整段的代码 Java 每实例化一个 Exception，都会对当时的栈进行快照，这是一个相对比较重的操作。如果发生的非常频繁，这个开销可就不能被忽略了。 父类能够捕获子类异常","head":[["meta",{"property":"og:url","content":"https://zhaoxin1998.github.io/debugKing-github.io/debugKing-github.io/study/java/javaSE/01-%E5%BC%82%E5%B8%B8.html"}],["meta",{"property":"og:site_name","content":"DebugKing"}],["meta",{"property":"og:title","content":"异常"}],["meta",{"property":"og:description","content":"异常 异常用于解决一下程序无法掌握但又必须面对的情况. 异常处理原则 尽量不要捕获类似 Exception 这样的通用异常，而是应该捕获特定异常 不要生吞（swallow）异常,捕获异常后不要不做任何操作或直接e.printStackTrace();输出堆栈轨迹信息 try-catch 代码段会产生额外的性能开销，它往往会影响 JVM 对代码进行优化，所以建议仅捕获有必要的代码段，尽量不要一个大的 try 包住整段的代码 Java 每实例化一个 Exception，都会对当时的栈进行快照，这是一个相对比较重的操作。如果发生的非常频繁，这个开销可就不能被忽略了。 父类能够捕获子类异常"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-18T03:56:49.000Z"}],["meta",{"property":"article:author","content":"DebugKing"}],["meta",{"property":"article:tag","content":"abnormal"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:modified_time","content":"2023-07-18T03:56:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"异常\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-18T03:56:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"DebugKing\\",\\"url\\":\\"https://github.com/zhaoxin1998\\",\\"email\\":\\"1778524294@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"异常处理原则","slug":"异常处理原则","link":"#异常处理原则","children":[]}],"git":{"createdTime":1689652609000,"updatedTime":1689652609000,"contributors":[{"name":"zhaoxin1998","email":"1778524294@qq.com","commits":1}]},"filePathRelative":"study/java/javaSE/01-异常.md","localizedDate":"2023年7月18日","excerpt":"<h1> 异常</h1>\\n<p>异常用于解决一下程序无法掌握但又必须面对的情况.</p>\\n<h2> 异常处理原则</h2>\\n<ol>\\n<li>尽量不要捕获类似 Exception 这样的通用异常，而是应该捕获特定异常</li>\\n<li>不要生吞（swallow）异常,捕获异常后不要不做任何操作或直接e.printStackTrace();输出堆栈轨迹信息</li>\\n<li>try-catch 代码段会产生额外的性能开销，它往往会影响 JVM 对代码进行优化，所以建议仅捕获有必要的代码段，尽量不要一个大的 try 包住整段的代码</li>\\n<li>Java 每实例化一个 Exception，都会对当时的栈进行快照，这是一个相对比较重的操作。如果发生的非常频繁，这个开销可就不能被忽略了。</li>\\n<li>父类能够捕获子类异常</li>\\n</ol>","autoDesc":true,"copyright":{"author":"Mr.debugKing","license":"MIT"},"readingTime":{"minutes":1.98,"words":595}}');export{t as data};
